import React from "react";
import { screen, render, act } from "@testing-library/react";
import "@testing-library/jest-dom/extend-expect";
import { createMemoryHistory } from "history";
import { Router } from "react-router-dom";
import { MockedProvider } from "@apollo/client/testing";

import Profile, { GET_USER_DATA } from "../profile";

const history = createMemoryHistory();
history.location.pathname = "/profile/@manou-codeur";
const match = {
  isExact: true,
  params: {
    username: "@manou-codeur",
  },
  path: "/profile/:username",
  url: "/profile/@manou-codeur",
};

test("Test the final state", async () => {
  const myMocks = {
    request: {
      query: GET_USER_DATA,
      variables: {
        login: "manou-codeur",
      },
    },
    result: {
      data: {
        user: {
          id: 444,
        },
      },
    },
  };

  render(
    <MockedProvider mocks={[myMocks]} addTypename={false}>
      <Profile match={match} />
    </MockedProvider>
  );
  await new Promise(resolve => setTimeout(resolve, 0));
  //   expect(screen.getByTestId("my-spinner")).toBeInTheDocument();

  expect(screen.getByTestId("my-name")).toBeInTheDocument();
});
